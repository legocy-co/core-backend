basePath: /api/v1
definitions:
  github_com_legocy-co_legocy_internal_delivery_http_schemas_calculator.LegoSetValuationCreateRequest:
    properties:
      lego_set_id:
        type: integer
      state:
        type: string
      valuation:
        type: number
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_calculator.LegoSetValuationResponse:
    properties:
      calculator:
        type: number
      id:
        type: integer
      lego_set:
        $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSetResponse'
      state:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_calculator.LegoSetValuationUpdateRequest:
    properties:
      lego_set_id:
        type: integer
      state:
        type: string
      valuation:
        type: number
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_collections.CollectionLegoSetAddRequest:
    properties:
      buy_price:
        type: number
      lego_set_id:
        type: integer
      state:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_collections.CollectionLegoSetResponse:
    properties:
      buy_price:
        type: number
      id:
        type: integer
      lego_set:
        $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSetResponse'
      state:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_collections.CollectionLegoSetUpdateRequest:
    properties:
      buy_price:
        type: number
      lego_set_id:
        type: integer
      state:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_collections.UserCollectionValuationResponse:
    properties:
      total:
        type: number
      user:
        $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserDetailResponse'
      valuations:
        items:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_calculator.LegoSetValuationResponse'
        type: array
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_collections.UserLegoSetCollectionResponse:
    properties:
      collection_sets:
        items:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_collections.CollectionLegoSetResponse'
        type: array
      user:
        $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserDetailResponse'
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSeriesRequest:
    properties:
      name:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSeriesResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSetImageResponse:
    properties:
      id:
        type: integer
      image_url:
        type: string
      is_main:
        type: boolean
      lego_set_id:
        type: integer
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSetRequest:
    properties:
      n_pieces:
        type: integer
      name:
        type: string
      number:
        type: integer
      series_id:
        type: integer
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSetResponse:
    properties:
      id:
        type: integer
      images:
        items:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSetImageResponse'
        type: array
      n_pieces:
        type: integer
      name:
        type: string
      number:
        type: integer
      series:
        $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSeriesResponse'
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace.ImageResponse:
    properties:
      id:
        type: integer
      image_url:
        type: string
      is_main:
        type: boolean
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace.ImageUploadResponse:
    properties:
      id:
        type: integer
      imageURL:
        type: string
      ok:
        type: boolean
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace.MarketItemRequest:
    properties:
      description:
        type: string
      lego_set_id:
        type: integer
      location:
        type: string
      price:
        type: number
      set_state:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace.MarketItemResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      images:
        items:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace.ImageResponse'
        type: array
      lego_set:
        $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSetResponse'
      location:
        type: string
      price:
        type: number
      seller:
        $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserDetailResponse'
      set_state:
        type: string
      status:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace_admin.MarketItemAdminCreateRequest:
    properties:
      description:
        type: string
      lego_set_id:
        type: integer
      location:
        type: string
      price:
        type: number
      seller_id:
        type: integer
      set_state:
        type: string
      status:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace_admin.MarketItemAdminResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      lego_set:
        $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSetResponse'
      location:
        type: string
      price:
        type: number
      seller:
        $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserDetailResponse'
      set_state:
        type: string
      status:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace_admin.MarketItemAdminUpdateRequest:
    properties:
      description:
        type: string
      lego_set_id:
        type: integer
      location:
        type: string
      price:
        type: number
      seller_id:
        type: integer
      set_state:
        type: string
      status:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users.AccessTokenResponse:
    properties:
      access_token:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users.JWTResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users.SignInRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserDetailResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      images:
        items:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserImageInfoResponse'
        type: array
      role:
        type: integer
      username:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserImageInfoResponse:
    properties:
      downloadURL:
        type: string
      filepath:
        type: string
      userID:
        type: integer
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserImageUploadResponse:
    properties:
      imageURL:
        type: string
      ok:
        type: boolean
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserImagesListResponse:
    properties:
      images:
        items:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserImageInfoResponse'
        type: array
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserRegistrationRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserReviewRequest:
    properties:
      message:
        type: string
      rating:
        type: integer
      seller_id:
        type: integer
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserReviewResponse:
    properties:
      date:
        type: string
      id:
        type: integer
      message:
        type: string
      rating:
        type: integer
      reviewer:
        $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserDetailResponse'
      seller:
        $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserDetailResponse'
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users_admin.AdminRegistrationRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users_admin.AdminRegistrationResponse:
    properties:
      email:
        type: string
      role:
        type: integer
      username:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users_admin.UserAdminDetailResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      role:
        type: integer
      username:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users_admin.UserAdminUpdateRequest:
    properties:
      email:
        type: string
      role:
        description: Admin/User/etc.
        type: integer
      username:
        type: string
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_users_profile.UserProfilePageResponse:
    properties:
      market_items:
        items:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace.MarketItemResponse'
        type: array
      user:
        $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserDetailResponse'
      user_reviews:
        items:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserReviewResponse'
        type: array
    type: object
  github_com_legocy-co_legocy_internal_delivery_http_schemas_utils_pagination.PageMetaResponse:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  ? github_com_legocy-co_legocy_internal_delivery_http_schemas_utils_pagination.PageResponse-github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace_MarketItemResponse
  : properties:
      data:
        items:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace.MarketItemResponse'
        type: array
      meta:
        $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_utils_pagination.PageMetaResponse'
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: LEGOcy is a marketplace for LEGO lovers.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: LEGOcy API
  version: "1.0"
paths:
  /admin/market-items/:
    post:
      operationId: create_market_item_admin
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace_admin.MarketItemAdminCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace_admin.MarketItemAdminResponse'
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Create Market Item (Admin)
      tags:
      - market_items_admin
  /admin/market-items/{itemId}:
    get:
      operationId: detail_market_item_admin
      parameters:
      - description: item ID
        in: path
        name: itemId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace_admin.MarketItemAdminResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get Market Item by ID (Admin)
      tags:
      - market_items_admin
    put:
      operationId: update_market_item_admin
      parameters:
      - description: item ID
        in: path
        name: itemId
        required: true
        type: integer
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace_admin.MarketItemAdminUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace_admin.MarketItemAdminResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Update Market Item (Admin)
      tags:
      - market_items_admin
  /admin/series/:
    post:
      operationId: create_series
      parameters:
      - description: create data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSeriesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Create LEGO Series object
      tags:
      - lego_series_admin
  /admin/series/{seriesID}:
    delete:
      operationId: delete_series
      parameters:
      - description: series ID
        in: path
        name: seriesID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Delete LegoSeries object
      tags:
      - lego_series_admin
  /admin/sets-valuations/:
    get:
      operationId: list_lego_set_valuation_admin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_calculator.LegoSetValuationResponse'
            type: array
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get LegoSetValuations (Admin)
      tags:
      - calculator_admin
    post:
      operationId: create_lego_set_valuation_admin
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_calculator.LegoSetValuationCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Create LegoSetValuation (Admin)
      tags:
      - calculator_admin
  /admin/sets-valuations/{valuationID}:
    delete:
      operationId: delete_lego_set_valuation_admin
      parameters:
      - description: id
        in: path
        name: valuationID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Delete LegoSetValuations (Admin)
      tags:
      - calculator_admin
    get:
      operationId: detail_lego_set_valuation_admin
      parameters:
      - description: id
        in: path
        name: valuationID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_calculator.LegoSetValuationResponse'
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get LegoSetValuations (Admin)
      tags:
      - calculator_admin
    put:
      operationId: update_lego_set_valuation_admin
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_calculator.LegoSetValuationUpdateRequest'
      - description: id
        in: path
        name: valuationID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Update LegoSetValuation (Admin)
      tags:
      - calculator_admin
  /admin/sets/:
    post:
      operationId: set_create
      parameters:
      - description: create data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Create Lego Set object
      tags:
      - lego_sets_admin
  /admin/sets/{setID}:
    delete:
      operationId: set_delete
      parameters:
      - description: LegoSet ID
        in: path
        name: setID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Delete Lego Set object
      tags:
      - lego_sets_admin
  /admin/sets/images/{imageId}:
    delete:
      consumes:
      - application/json
      operationId: delete_lego_set_image_by_id
      parameters:
      - description: image id
        in: path
        name: imageId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete Image By Id
      tags:
      - lego_set_images
  /admin/sets/images/{legoSetID}:
    post:
      consumes:
      - multipart/form-data
      operationId: upload_lego_set_image
      parameters:
      - description: filepath
        in: formData
        name: file
        required: true
        type: file
      - description: lego set id
        in: path
        name: legoSetID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSetImageResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Upload Image
      tags:
      - lego_set_images
  /admin/users/:
    get:
      operationId: list_users_admin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users_admin.UserAdminDetailResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get Users (Admin)
      tags:
      - users_admin
  /admin/users/{userId}:
    delete:
      operationId: delete_user_admin
      parameters:
      - description: user ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete User
      tags:
      - users_admin
    get:
      operationId: detail_user_admin
      parameters:
      - description: user ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users_admin.UserAdminDetailResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get User by ID (Admin)
      tags:
      - users_admin
    put:
      operationId: update_user
      parameters:
      - description: user ID
        in: path
        name: userId
        required: true
        type: integer
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users_admin.UserAdminUpdateRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users_admin.UserAdminDetailResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update User
      tags:
      - users_admin
  /admin/users/register:
    post:
      operationId: create-admin
      parameters:
      - description: reg request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users_admin.AdminRegistrationRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users_admin.AdminRegistrationResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create Admin
      tags:
      - users_admin
  /collections/:
    get:
      operationId: get_user_collection
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_collections.UserLegoSetCollectionResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get User Collection
      tags:
      - user_collections
    post:
      operationId: add_set_user_collections
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_collections.CollectionLegoSetAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Add Set To Collection
      tags:
      - user_collections
  /collections/{setID}:
    delete:
      operationId: delete_set_user_collections
      parameters:
      - description: set ID
        in: path
        name: setID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Delete User Collection Set
      tags:
      - user_collections
    put:
      operationId: update_set_user_collection
      parameters:
      - description: set ID
        in: path
        name: setID
        required: true
        type: integer
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_collections.CollectionLegoSetUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Update Collection Set Info
      tags:
      - user_collections
  /collections/calculator/{currencyID}:
    get:
      operationId: get_user_collection_valuation
      parameters:
      - description: currency ID
        in: path
        name: currencyID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_collections.UserCollectionValuationResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get User Collection Valuation
      tags:
      - user_collections
  /market-items/:
    get:
      operationId: list_market_items
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_utils_pagination.PageResponse-github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace_MarketItemResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get Market Items
      tags:
      - market_items
    post:
      operationId: create_market_item
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace.MarketItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Create Market Item
      tags:
      - market_items
  /market-items/{itemID}:
    get:
      operationId: detail_market_item
      parameters:
      - description: item ID
        in: path
        name: itemID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace.MarketItemResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get Market Item
      tags:
      - market_items
    put:
      operationId: update_market_item
      parameters:
      - description: item ID
        in: path
        name: itemID
        required: true
        type: integer
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace.MarketItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace.MarketItemResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Update Market Item
      tags:
      - market_items
  /market-items/{itemId}:
    delete:
      operationId: delete_market_item
      parameters:
      - description: item ID
        in: path
        name: itemId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Delete Market Item
      tags:
      - market_items
  /market-items/authorized/:
    get:
      operationId: list_market_items_authorized
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_utils_pagination.PageResponse-github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace_MarketItemResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get Market Items Authorized
      tags:
      - market_items
  /market-items/images/{imageId}:
    delete:
      consumes:
      - application/json
      operationId: delete_market_item_image
      parameters:
      - description: image id
        in: path
        name: imageId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Delete Image
      tags:
      - market_item_images
  /market-items/images/{marketItemID}:
    post:
      consumes:
      - multipart/form-data
      operationId: upload_market_item_image
      parameters:
      - description: filepath
        in: formData
        name: file
        required: true
        type: file
      - description: market item id
        in: path
        name: marketItemID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_marketplace.ImageUploadResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Upload Image
      tags:
      - market_item_images
  /series/:
    get:
      operationId: list_lego_series
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSeriesResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: List of LEGO Series objects
      tags:
      - lego_series
  /series/{seriesID}:
    get:
      operationId: detail_lego_series
      parameters:
      - description: series ID
        in: path
        name: seriesID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSeriesResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: LEGO Series by id
      tags:
      - lego_series
  /sets-valuations/{legoSetID}:
    get:
      consumes:
      - application/json
      description: Get valuations by lego set id
      parameters:
      - description: Lego Set ID
        in: path
        name: legoSetID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_calculator.LegoSetValuationResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get valuations by lego set id
      tags:
      - calculator
  /sets/:
    get:
      operationId: list_sets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSetResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: List of LegoSet objects
      tags:
      - lego_sets
  /sets/{setID}:
    get:
      operationId: set_detail
      parameters:
      - description: Lego Set ID
        in: path
        name: setID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_lego.LegoSetResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get LegoSet by ID
      tags:
      - lego_sets
  /users/auth/refresh:
    post:
      operationId: refresh-jwt
      parameters:
      - description: jwt request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.AccessTokenResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: refresh jwt tokens
      tags:
      - authentication
  /users/auth/register:
    post:
      operationId: user-register
      parameters:
      - description: user data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserRegistrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.JWTResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: register new user
      tags:
      - authentication
  /users/auth/sign-in:
    post:
      operationId: create-jwt
      parameters:
      - description: jwt request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.JWTResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: generate jwt token
      tags:
      - authentication
  /users/images/{userID}:
    get:
      operationId: get_user_images
      parameters:
      - description: user ID
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserImagesListResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get User Images List
      tags:
      - users_images
  /users/images/{userID}/avatar:
    post:
      consumes:
      - multipart/form-data
      operationId: upload_user_image
      parameters:
      - description: filepath
        in: formData
        name: file
        required: true
        type: file
      - description: user id
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserImageUploadResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Download User Image
      tags:
      - users_images
  /users/profile/{userID}:
    get:
      operationId: detail_user_profile_page
      parameters:
      - description: user ID
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users_profile.UserProfilePageResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get User Profile Page
      tags:
      - user_profile_pages
  /users/reviews/:
    get:
      operationId: list_user_reviews
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserReviewResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get User Reviews
      tags:
      - user_reviews
    post:
      operationId: create_user_review
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserReviewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Create User Review
      tags:
      - user_reviews
  /users/reviews/{reviewID}:
    get:
      operationId: detail_user_review
      parameters:
      - description: review ID
        in: path
        name: reviewID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_legocy-co_legocy_internal_delivery_http_schemas_users.UserReviewResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get User Review
      tags:
      - user_reviews
  /users/reviews/{reviewId}:
    delete:
      operationId: delete_user_review
      parameters:
      - description: review ID
        in: path
        name: reviewId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Delete User Review
      tags:
      - user_reviews
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
