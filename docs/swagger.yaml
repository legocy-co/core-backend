basePath: /api/v1
definitions:
  legocy-go_internal_delievery_http_resources.DataMetaResponse:
    properties:
      data: {}
      meta: {}
    type: object
  legocy-go_internal_delievery_http_resources_lego.LegoSeriesRequest:
    properties:
      name:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_lego.LegoSeriesResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_lego.LegoSetRequest:
    properties:
      n_pieces:
        type: integer
      name:
        type: string
      number:
        type: integer
      series_id:
        type: integer
    type: object
  legocy-go_internal_delievery_http_resources_lego.LegoSetResponse:
    properties:
      id:
        type: integer
      n_pieces:
        type: integer
      name:
        type: string
      number:
        type: integer
      series:
        $ref: '#/definitions/legocy-go_internal_delievery_http_resources_lego.LegoSeriesResponse'
    type: object
  legocy-go_internal_delievery_http_resources_marketplace.CurrencyRequest:
    properties:
      name:
        type: string
      symbol:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_marketplace.CurrencyResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      symbol:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_marketplace.LocationRequest:
    properties:
      city:
        type: string
      country:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_marketplace.LocationResponse:
    properties:
      city:
        type: string
      country:
        type: string
      id:
        type: integer
    type: object
  legocy-go_internal_delievery_http_resources_marketplace.MarketItemRequest:
    properties:
      currency_id:
        type: integer
      lego_set_id:
        type: integer
      location_id:
        type: integer
      price:
        type: number
      status:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_marketplace.MarketItemResponse:
    properties:
      currency:
        $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.CurrencyResponse'
      id:
        type: integer
      lego_set:
        $ref: '#/definitions/legocy-go_internal_delievery_http_resources_lego.LegoSetResponse'
      location:
        $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.LocationResponse'
      price:
        type: number
      seller:
        $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users.UserDetailResponse'
      status:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_marketplace.UserProfilePageResponse:
    properties:
      marketItems:
        items:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.MarketItemResponse'
        type: array
      user:
        $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users.UserDetailResponse'
      userImages:
        items:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users.UserImageInfoResponse'
        type: array
      userReviews:
        items:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.UserReviewResponse'
        type: array
    type: object
  legocy-go_internal_delievery_http_resources_marketplace.UserReviewRequest:
    properties:
      message:
        type: string
      rating:
        type: integer
      seller_id:
        type: integer
    type: object
  legocy-go_internal_delievery_http_resources_marketplace.UserReviewResponse:
    properties:
      date:
        type: string
      id:
        type: integer
      message:
        type: string
      rating:
        type: integer
      reviewer:
        $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users.UserDetailResponse'
      seller:
        $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users.UserDetailResponse'
    type: object
  legocy-go_internal_delievery_http_resources_marketplace_admin.MarketItemAdminCreateRequest:
    properties:
      currencyID:
        type: integer
      legoSetID:
        type: integer
      locationID:
        type: integer
      price:
        type: number
      sellerID:
        type: integer
      status:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_marketplace_admin.MarketItemAdminResponse:
    properties:
      currency:
        $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.CurrencyResponse'
      id:
        type: integer
      lego_set:
        $ref: '#/definitions/legocy-go_internal_delievery_http_resources_lego.LegoSetResponse'
      location:
        $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.LocationResponse'
      price:
        type: number
      seller:
        $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users.UserDetailResponse'
      status:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_marketplace_admin.MarketItemAdminUpdateRequest:
    properties:
      currencyID:
        type: integer
      legoSetID:
        type: integer
      locationID:
        type: integer
      price:
        type: number
      sellerID:
        type: integer
      status:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_users.JWTRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_users.JWTResponse:
    properties:
      access:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_users.UserDetailResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      role:
        type: integer
      username:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_users.UserImageInfoResponse:
    properties:
      filepath:
        type: string
      userID:
        type: integer
    type: object
  legocy-go_internal_delievery_http_resources_users.UserRegistrationRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_users.UserRegistrationResponse:
    properties:
      email:
        type: string
      role:
        type: integer
      username:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_users_admin.AdminRegistrationRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_users_admin.AdminRegistrationResponse:
    properties:
      email:
        type: string
      role:
        type: integer
      username:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_users_admin.UserAdminDetailResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      role:
        type: integer
      username:
        type: string
    type: object
  legocy-go_internal_delievery_http_resources_users_admin.UserAdminUpdateRequest:
    properties:
      email:
        type: string
      role:
        description: Admin/User/etc.
        type: integer
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: LEGOcy is a marketplace for LEGO lovers.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: LEGOcy API
  version: "1.0"
paths:
  /admin/currencies/:
    post:
      operationId: currency_create
      parameters:
      - description: currency symbol
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.CurrencyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get currency by symbol
      tags:
      - currencies_admin
  /admin/locations/:
    post:
      operationId: locations_create
      parameters:
      - description: location data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.LocationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Create Location
      tags:
      - locations_admin
  /admin/locations/{locID}:
    delete:
      operationId: locations_delete
      parameters:
      - description: location ID
        in: path
        name: locID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.LocationResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get locations by country
      tags:
      - locations_admin
  /admin/market-items/:
    post:
      operationId: create_market_item_admin
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace_admin.MarketItemAdminCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace_admin.MarketItemAdminResponse'
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Create Market Item (Admin)
      tags:
      - market_items_admin
  /admin/market-items/{itemId}:
    get:
      operationId: detail_market_item_admin
      parameters:
      - description: item ID
        in: path
        name: itemId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace_admin.MarketItemAdminResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get Market Item by ID (Admin)
      tags:
      - market_items_admin
    put:
      operationId: update_market_item_admin
      parameters:
      - description: item ID
        in: path
        name: itemId
        required: true
        type: integer
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace_admin.MarketItemAdminUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace_admin.MarketItemAdminResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Update Market Item (Admin)
      tags:
      - market_items_admin
  /admin/series/:
    post:
      operationId: create_series
      parameters:
      - description: create data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_lego.LegoSeriesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Create LEGO Series object
      tags:
      - lego_series_admin
  /admin/series/{seriesID}:
    delete:
      operationId: delete_series
      parameters:
      - description: series ID
        in: path
        name: seriesID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Delete LegoSeries object
      tags:
      - lego_series_admin
  /admin/sets/:
    post:
      operationId: set_create
      parameters:
      - description: create data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_lego.LegoSetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Create Lego Set object
      tags:
      - lego_sets_admin
  /admin/sets/{setID}:
    delete:
      operationId: set_delete
      parameters:
      - description: LegoSet ID
        in: path
        name: setID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Delete Lego Set object
      tags:
      - lego_sets_admin
  /admin/users/:
    get:
      operationId: list_users_admin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users_admin.UserAdminDetailResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get Users (Admin)
      tags:
      - users_admin
  /admin/users/{userId}:
    delete:
      operationId: delete_user_admin
      parameters:
      - description: user ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete User
      tags:
      - users_admin
    get:
      operationId: detail_user_admin
      parameters:
      - description: user ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users_admin.UserAdminDetailResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get User by ID (Admin)
      tags:
      - users_admin
    put:
      operationId: update_user
      parameters:
      - description: user ID
        in: path
        name: userId
        required: true
        type: integer
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users_admin.UserAdminUpdateRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users_admin.UserAdminDetailResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update User
      tags:
      - users_admin
  /admin/users/register:
    post:
      operationId: create-admin
      parameters:
      - description: reg request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users_admin.AdminRegistrationRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users_admin.AdminRegistrationResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create Admin
      tags:
      - users_admin
  /currencies/:
    get:
      operationId: list_currencies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.CurrencyResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get all currencies
      tags:
      - currencies
  /currencies/{currencySymbol}:
    get:
      operationId: currency_detail
      parameters:
      - description: currency symbol
        in: path
        name: currencySymbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.CurrencyResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get currency by symbol
      tags:
      - currencies
  /locations/:
    get:
      operationId: locations_list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.LocationResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get locations
      tags:
      - locations
  /locations/{country}:
    get:
      operationId: locations_country
      parameters:
      - description: country
        in: path
        name: country
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.LocationResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get locations by country
      tags:
      - locations
  /market-items/:
    get:
      operationId: list_market_items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get Market Items
      tags:
      - market_items
    post:
      operationId: create_market_item
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.MarketItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Create Market Item
      tags:
      - market_items
  /market-items/{itemID}:
    get:
      operationId: detail_market_item
      parameters:
      - description: item ID
        in: path
        name: itemID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.MarketItemResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get Market Item
      tags:
      - market_items
    put:
      operationId: update_market_item
      parameters:
      - description: item ID
        in: path
        name: itemID
        required: true
        type: integer
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.MarketItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.MarketItemResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Update Market Item
      tags:
      - market_items
  /market-items/{itemId}:
    delete:
      operationId: delete_market_item
      parameters:
      - description: item ID
        in: path
        name: itemId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Delete Market Item
      tags:
      - market_items
  /market-items/authorized/:
    get:
      operationId: list_market_items_authorized
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get Market Items Authorized
      tags:
      - market_items
  /series/:
    get:
      operationId: list_lego_series
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/legocy-go_internal_delievery_http_resources_lego.LegoSeriesResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: List of LEGO Series objects
      tags:
      - lego_series
  /series/{seriesID}:
    get:
      operationId: detail_lego_series
      parameters:
      - description: series ID
        in: path
        name: seriesID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/legocy-go_internal_delievery_http_resources_lego.LegoSeriesResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: LEGO Series by id
      tags:
      - lego_series
  /sets/:
    get:
      operationId: list_sets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/legocy-go_internal_delievery_http_resources_lego.LegoSetResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: List of LegoSet objects
      tags:
      - lego_sets
  /sets/{setID}:
    get:
      operationId: set_detail
      parameters:
      - description: Lego Set ID
        in: path
        name: setID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/legocy-go_internal_delievery_http_resources_lego.LegoSetResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get LegoSet by ID
      tags:
      - lego_sets
  /user-profile-pages/{userID}:
    get:
      operationId: detail_user_profile_page
      parameters:
      - description: user ID
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.UserProfilePageResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get User Profile Page
      tags:
      - user_profile_pages
  /user-reviews/:
    get:
      operationId: list_user_reviews
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get User Reviews
      tags:
      - user_reviews
    post:
      operationId: create_user_review
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.UserReviewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Create User Review
      tags:
      - user_reviews
  /user-reviews/{reviewID}:
    get:
      operationId: detail_user_review
      parameters:
      - description: review ID
        in: path
        name: reviewID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/legocy-go_internal_delievery_http_resources_marketplace.UserReviewResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get User Review
      tags:
      - user_reviews
  /user-reviews/{reviewId}:
    delete:
      operationId: delete_user_review
      parameters:
      - description: review ID
        in: path
        name: reviewId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Delete User Review
      tags:
      - user_reviews
  /users/register:
    post:
      operationId: user-register
      parameters:
      - description: user data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users.UserRegistrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users.UserRegistrationResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: register new user
      tags:
      - authentication
  /users/token:
    post:
      operationId: create-jwt
      parameters:
      - description: jwt request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users.JWTRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/legocy-go_internal_delievery_http_resources_users.JWTResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: generate jwt token
      tags:
      - authentication
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
